library(readr)
library(devtools)
library(ggpubr)
library(tidyr)
library(janitor)
library('data.table')#how to transpose rows and columns
library(readxl)
library(matrixStats)
library(ggplot2)




#### Formatting TACX output data ####
AllClariom <- read_excel("~/Clariom/AllclariomA32.xlsx")
AllClariom <- AllClariom[!duplicated(AllClariom[,"NAME"]),]
AllClariom <- AllClariom[, -1] # Delete the Affymetrix junction IDs
AllClariom[,2:21] <- 2^AllClariom[,2:21]

####  Calculate gene ranges for normalization #### 
AllClariom$gene_min <- rowMins(as.matrix(AllClariom [, -1]))
AllClariom$gene_max <- rowMaxs(as.matrix(AllClariom [, -1]))

#### Calculate mean per group ####
names_sig <- c("qNSC", "aNSC", "TAP", "iNB", "mNB")
for (i in names_sig) {
  AllClariom[, paste0(i, "_mean")] <- rowMeans(AllClariom[, which(grepl(i, colnames(AllClariom)))])
  AllClariom[, i] <- 
    (AllClariom[, paste0(i, "_mean")] - AllClariom[,"gene_min"]) / (AllClariom[,"gene_max"] - AllClariom[,"gene_min"])
}

Data_Norm <- AllClariom[, c("NAME",names_sig)]

#### Redmond 2021 ####
Redmond_clusters <- c("14","6","13","12","8","16","10","17","0","1","4")
Redmond_dir <- "~/Clariom/Input_datasets/Redmond_data clusters.xlsx"
list_Redmond <- lapply(X = Redmond_clusters, FUN = function(cluster_nb){
  return(read_xlsx(Redmond_dir, sheet = which(excel_sheets(Redmond_dir) == cluster_nb))$Gene)
})
names(list_Redmond) <- paste0("Redmond_",Redmond_clusters)



#### Llorens 2015 ####
# Table S2 from Llorens-Bobadilla et al. 2015 https://doi.org/10.1016/j.stem.2015.07.002
# File name "1-s2.0-S193459091500301X-mmc3.xlsx"
# Gene names are entirely upper case, use str_to_title to change
Llorens_clusters <- c("3","2","4","6","7")
Llorens_dir <- "~/Clariom/Input_datasets/1-s2.0-S193459091500301X-mmc3.xlsx"
Llorens_data <- read_xlsx(Llorens_dir)
colnames(Llorens_data)[3] <- "Gene"
list_Llorens <- lapply(X = Llorens_clusters, FUN = function(cluster_nb){
genelist <- (subset(Llorens_data, cluster == cluster_nb)$Gene)
  return(str_to_title(genelist))
})
names(list_Llorens) <- paste0("Llorens_",Llorens_clusters)

#### Zywitza 2018 ####
# Table S3 from Zywitza et al. 2018 https://doi.org/10.1016/j.celrep.2018.11.003
# File name "1-s2.0-S2211124718317327-mmc4.xlsx", column of interest "gene"
# Gene names are entirely upper case, use str_to_title to change
Zywitza_clusters <- c("7","8","6","5","4")
Zywitza_dir <- "~/Clariom/Input_datasets/1-s2.0-S2211124718317327-mmc4.xlsx"
list_Zywitza <- lapply(X = Zywitza_clusters, FUN = function(cluster_nb){
  Zywitza_sheet <- grep(pattern = cluster_nb, x = excel_sheets(Zywitza_dir))
  genelist <- read_xlsx(Zywitza_dir, sheet = Zywitza_sheet)$gene
  return(str_to_title(genelist))
})
names(list_Zywitza) <- paste0("Zywitza_",Zywitza_clusters,"_",names_sig)

# Function to write the .csv of genes from each gene list
Fonction_gene <- function(geneList){
  for (n in 1:length(geneList)) {
    Data_Norm_subset <- Data_Norm[Data_Norm$NAME %in% geneList[[n]],1:6]
    
    write.csv(x = Data_Norm_subset,
            file = paste0("~/Clariom/Output_clariom/csv files/", 
                          names(geneList)[n], ".csv" ))
    Data_Norm_subset <- pivot_longer(Data_Norm, cols = c(qNSC, aNSC, TAP, iNB, mNB), names_to = "Population")
    }
  return(Data_Norm)
  }

Data_Norm2 <- Fonction_gene(list_Llorens)
Data_Norm2 <- Fonction_gene(list_Zywitza)
Data_Norm2 <- Fonction_gene(list_Redmond)
Data_Norm_test <- pivot_longer(Data_Norm, cols = c(qNSC, aNSC, TAP, iNB, mNB), names_to = "Population")

# Normalized gene expression data was represented using GraphPad Prism 8
